" Must be first line -- use vim settings
set nocompatible

" --- Vundle ---
filetype off

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin('~/.vundle')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

if has("gui_mac") || has("gui_macvim")
    Plugin 'rizzatti/dash.vim'
endif

Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'ryanoasis/vim-devicons'
Plugin 'https://gn.googlesource.com/gn', { 'rtp': 'misc/vim' }
Plugin 'mhinz/vim-startify'
Plugin 'dracula/vim', { 'name': 'dracula' }
Plugin 'pangloss/vim-javascript'
Plugin 'evanleck/vim-svelte', {'branch': 'main'}

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" --- END Vundle ---

" clear all autocmds
autocmd!

" Automatically reload vimrc when it's saved
autocmd! BufWritePost ~/.vimrc so ~/.vimrc

" Pathogen
runtime bundle/vim-pathogen/autoload/pathogen.vim
call pathogen#infect()
call pathogen#helptags()

" Misc config
syntax on
syntax enable
filetype plugin indent on
filetype on
scriptencoding utf-8
set encoding=UTF-8

" trying to speed up ruby
set ttyfast
set lazyredraw
autocmd FileType ruby setlocal ts=2 sts=2 sw=2 norelativenumber nocursorline


set list
set listchars=tab:>-,trail:-
set mouse=a

if !has('nvim')
  set ttymouse=xterm2
endif

set shortmess+=filmnrxoOtT
set viewoptions=folds,options,cursor,unix,slash
set history=1000
set background=dark
set nu
set showmatch
set incsearch
set hlsearch
set ignorecase
set smartcase
set wildmenu
set wildmode=list:longest,full
set whichwrap=b,s,h,l
set foldenable
set nowrap
set autoindent
set pastetoggle=<F12>
set t_Co=256
set exrc

" Tell vim to remember certain things when we exit
" "  '10  :  marks will be remembered for up to 10 previously edited files
" "  "100 :  will save up to 100 lines for each register
" "  :20  :  up to 20 lines of command-line history will be remembered
" "  %    :  saves and restores the buffer list
set viminfo='10,\"100,:20,%

" Solarized color settings
colorscheme solarized
set background=dark

" Forces use of the system clipboard in OS X
set clipboard+=unnamed

set tabpagemax=15
set showmode
set cursorline
set guifont=Monaco:h14

nnoremap Y y$
cmap cwd lcd %:p:h

" Remap pop-up menu up/down -> j/k
inoremap <expr> j ((pumvisible())?("\<C-n>"):("j"))
inoremap <expr> k ((pumvisible())?("\<C-p>"):("k"))

" Ack mapping 
nnoremap <leader>a :Ack
let g:ackprg = 'ag --nogroup --nocolor --column'

" Highlight the 100 char column
set colorcolumn=100

" Highlight .jsm files as Javascript
au BufNewFile,BufRead *.jsm set filetype=javascript

" gdbinit.symlink -> gdb
au BufNewFile,BufRead gdbinit.symlink set filetype=gdb

" Rust
au BufNewFile,BufRead *.rs setfiletype rust

" Go
au BufNewFile,BufRead *.go set filetype=go

" Arduino
au BufNewFile,BufRead *.ino set filetype=cpp

au BufNewFile,BufRead *.jinja set filetype=jinja

au BufNewFile,BufRead *.lic set filetype=ruby

" disable audio / visual bell
set noerrorbells visualbell t_vb=
autocmd GUIEnter * set visualbell t_vb=

if has("gui_macvim")
    set fuoptions=maxvert,maxhorz
    au GUIEnter * set fullscreen
endif

" Turn Off Swap Files
" ===================
set noswapfile
set nobackup
set nowritebackup

" Completion
" ==========

set wildmode=list:longest
set wildmenu " Enable ctrl-n and ctrl-p to scroll thru matches
set wildignore=*.o,*.obj,*~ " Stuff to ignore when tab completing
set wildignore+=*vim/backups*

" Scrolling
" =========

" Start scrolling when we're getting close to margins
set scrolloff=5
set sidescrolloff=5
set sidescroll=1

" how often vim writes to swap, updates UI plugins, etc
set updatetime=100

" Status Line
" ===========

set statusline= " Override default
set statusline+=%{fugitive#statusline()[4:-2]} " Show fugitive git info
set statusline+=\ %f\ %m\ %r " Show filename/path
set statusline+=%= " Set right-side status info after this line
set statusline+=%l/%L:%v " Set <line number>/<total lines>:<column>
set statusline+=\ " Set ending space

" Windows
" ==========
" make all windows the same size when adding/removing windows
set equalalways
" always vertical-split to the right
set splitright
" always horizontal-split to the bottom
set splitbelow

" easier navigation between split windows
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l

" Tlist settings
let Tlist_Ctags_Cmd='/usr/local/bin/ctags'
"map <F4> :TlistToggle<cr>
"map <F5> :!/usr/local/bin/ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR>

"tagbar settings
nmap <F4> :TagbarToggle<CR>

" NERDTree settings
map <F2> :NERDTreeToggle \| :silent NERDTreeMirror<CR>
map <leader>r :NERDTreeFind<cr>

let g:NERDTreeIgnore = ['\.pyc$', '\.egg-info$', 'objdir-.*$[[dir]]', '_virtualenv[[dir]]']
let g:NERDTreeMapOpenVSplit = "v"
let g:NERDTreeWinSize = 60
let g:NERDTreeShowBookmarks = 1

" CtrlP settings
set wildignore+=*/objdir-*/*,*/.git/*,*/.hg/*,*/_virtualenv/*
set wildignore+=*.pyc

let g:ctrlp_max_files = 50000

if executable("ag")
    set grepprg=ag\ --nogroup\ --nocolor\ --hidden
    let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'
endif

let g:ctrlp_show_hidden = 1

" vim-airline
let g:airline_theme='tomorrow'

" ConqueTerm settings
let g:ConqueTerm_TERM = 'xterm-256'

" Syntastic settings
"set statusline+=%#warningmsg#
"set statusline+=%{SyntasticStatuslineFlag()}
"set statusline+=%*

" deal with redraw bug in Syntastic
"autocmd VimEnter * nnoremap <silent> <c-j> :TmuxNavigateDown<cr>:redraw!<cr>

let g:syntastic_always_populate_loc_list = 0
let g:syntastic_auto_loc_list = 0
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0

let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_auto_colors = 0

let g:instant_markdown_autostart = 0

autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=8
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=0
"hi IndentGuidesOdd ctermbg=black
"hi IndentGuidesEven ctermbg=black

set foldcolumn=1
set foldlevel=20

" yaml
au! BufNewFile,BufReadPost *.{yaml,yml} set filetype=yaml foldmethod=indent
autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab
